{"version":3,"sources":["constants.js","components/twitter-login/TwitterLogin.js","components/dashboard/Dashboard.js","copy.js","components/footer/Footer.js","services/apiService.js","components/app/App.js","index.js"],"names":["API_URL","process","TwitterLogin","onClickLogin","a","window","location","className","type","onClick","Dashboard","userData","percentage","Math","round","matched","total","followers","message","tweet","trim","href","encodeURIComponent","target","rel","Footer","fetchUserData","data","axios","get","withCredentials","response","status","Error","errors","map","e","join","App","useState","loading","setLoading","error","setError","setUserData","useEffect","fetchData","ReactDOM","render","document","getElementById"],"mappings":"2UAAaA,G,MAAUC,2CCcRC,MAXf,WACE,IAAMC,EAAY,uCAAG,sBAAAC,EAAA,sDACnBC,OAAOC,SAAP,UAAqBN,EAArB,kCADmB,2CAAH,qDAGlB,OACE,yBAAKO,UAAU,iBACb,4BAAQA,UAAU,SAASC,KAAK,SAASC,QAASN,GAAlD,wBCkBSO,G,MApBG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACbC,EAAaC,KAAKC,MAAMH,EAASI,QAAUJ,EAASK,MAAQ,KAC5DC,EAAY,YAAiC,IAAnBN,EAASK,MAAc,GAAK,KACtDE,EAAUN,EAAa,GCIG,kDAJC,mDDC3BO,GAASP,EFTiB,GGEF,iCAJC,mCDWgE,QAC/F,OACE,yBAAKL,UAAU,aACb,uCAAaI,EAASK,MAAtB,IAA8BC,EAA9B,KAA2CL,EAA3C,oCACA,2BAAIM,EAAQE,QACZ,uBACEb,UAAU,SACVc,KAAI,gDAA2CC,mBAAmBH,EAAMC,SACxEG,OAAO,SACPC,IAAI,uBAJN,wBEASC,G,MAZA,WACb,OACE,yBAAKlB,UAAU,UACb,8CAEE,uBAAGc,KAAK,6BAA6BE,OAAO,SAASC,IAAI,uBAAzD,eAFF,WAGE,uBAAGH,KAAK,yBAAyBG,IAAI,uBAArC,iB,iBCPKE,EAAa,uCAAG,8BAAAtB,EAAA,6DACvBuB,EAAO,KADgB,kBAGPC,IAAMC,IAAN,UAAa7B,EAAb,SAA6B,CAAE8B,iBAAiB,IAHzC,gBAGtBH,EAHsB,EAGtBA,KAHsB,oDAKrB,KAAEI,WAAY,KAAEA,SAASC,OALJ,oBAMG,MAAtB,KAAED,SAASC,OANQ,0CAOd,MAPc,WASG,MAAtB,KAAED,SAASC,OATQ,uBAUf,IAAIC,MAAM,+DAVK,cAanB,IAAIA,MAAJ,MAbmB,WAetBN,EAfsB,0CAgBlB,MAhBkB,YAkBvBA,EAAKO,OAlBkB,uBAmBnB,IAAID,MAAMN,EAAKO,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAElB,WAASmB,KAAK,OAnB5B,iCAqBpBV,GArBoB,yDAAH,qDC2DXW,MApDf,WAAiB,IAAD,EACgBC,oBAAS,GADzB,mBACPC,EADO,KACEC,EADF,OAEYF,mBAAS,IAFrB,mBAEPG,EAFO,KAEAC,EAFA,OAGkBJ,mBAAS,MAH3B,mBAGP5B,EAHO,KAGGiC,EAHH,KAmCd,OA9BAC,qBAAU,YACO,uCAAG,4BAAAzC,EAAA,6DAChBuC,EAAS,IADO,kBAGSjB,IAHT,OAGRf,EAHQ,OAIdiC,EAAYjC,GAJE,gDAMdgC,EAAS,KAAEzB,SANG,QAQhBuB,GAAW,GARK,yDAAH,qDAUfK,KACC,IAmBD,yBAAKvC,UAAU,OACb,yBAAKA,UAAU,0BACb,oCACA,oCACA,0CAEF,yBAAKA,UAAU,eACb,0BAAMA,UAAU,aAvBhBiC,EACK,yCAEL7B,EACK,kBAAC,EAAD,CAAWA,SAAUA,IAG5B,6BACG+B,EAAQ,uBAAGnC,UAAU,SAASmC,GAAa,GAC5C,gFACA,kBAAC,EAAD,QAgBA,kBAAC,EAAD,SCnDRK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.920c3a69.chunk.js","sourcesContent":["export const API_URL = process.env.REACT_APP_API_URL\n\nexport const ACTIVIST_THRESHOLD = 30\n","import React from 'react'\nimport { API_URL } from '../../constants'\n\nfunction TwitterLogin () {\n  const onClickLogin = async () => {\n    window.location = `${API_URL}/sessions/connect?client=react`\n  }\n  return (\n    <div className='twitter-login'>\n      <button className='button' type='button' onClick={onClickLogin}>Login With Twitter</button>\n    </div>\n  )\n}\n\nexport default TwitterLogin\n","import './Dashboard.scss'\n\nimport React from 'react'\n\nimport { ACTIVIST_THRESHOLD } from '../../constants'\nimport { MESSAGE_FOR_ACTIVISTS, MESSAGE_FOR_SUPPORTERS, TWEET_FOR_ACTIVISTS, TWEET_FOR_SUPPORTERS, TWEET_HASHTAG } from '../../copy'\n\nconst Dashboard = ({ userData }) => {\n  const percentage = Math.round(userData.matched / userData.total * 100)\n  const followers = 'follower' + (userData.total === 1 ? '' : 's')\n  const message = percentage > 50 ? MESSAGE_FOR_ACTIVISTS : MESSAGE_FOR_SUPPORTERS\n  const tweet = (percentage > ACTIVIST_THRESHOLD ? TWEET_FOR_ACTIVISTS : TWEET_FOR_SUPPORTERS) + ' ' + TWEET_HASHTAG\n  return (\n    <div className='dashboard'>\n      <p>You have {userData.total} {followers}, {percentage}% of whom are Labour supporters.</p>\n      <p>{message.trim()}</p>\n      <a\n        className='button'\n        href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(tweet.trim())}`}\n        target='_blank'\n        rel='noreferrer noopener'\n      >Tweet our message\n      </a>\n    </div>\n  )\n}\n\nexport default Dashboard\n","export const TWEET_FOR_SUPPORTERS = `\nMESSAGE FOR SUPPORTERS HERE\n`\n\nexport const TWEET_FOR_ACTIVISTS = `\nMESSAGE FOR ACTIVISTS HERE\n`\n\nexport const TWEET_HASHTAG = '#KYF'\n\nexport const MESSAGE_FOR_SUPPORTERS = `\nYou should tweet our message for supporters.\n`\n\nexport const MESSAGE_FOR_ACTIVISTS = `\nYou should tweet our message for activists.\n`\n","import './Footer.scss'\n\nimport React from 'react'\n\nconst Footer = () => {\n  return (\n    <div className='footer'>\n      <p>\n        Developed by&nbsp;\n        <a href='https://campaignlab.org.uk' target='_blank' rel='noopener noreferrer'>CampaignLab</a> for&nbsp;\n        <a href='https://labour.org.uk/' rel='noopener noreferrer'>UK Labour</a>\n      </p>\n    </div>\n  )\n}\n\nexport default Footer\n","import axios from 'axios'\nimport { API_URL } from '../constants'\n\nexport const fetchUserData = async () => {\n  let data = null\n  try {\n    ({ data } = await axios.get(`${API_URL}/test`, { withCredentials: true }))\n  } catch (e) {\n    if (e.response && e.response.status) {\n      if (e.response.status === 401) {\n        return null\n      }\n      if (e.response.status === 429) {\n        throw new Error('You are being rate limited. Please try again in 15 minutes.')\n      }\n    }\n    throw new Error(e)\n  }\n  if (!data) {\n    return null\n  }\n  if (data.errors) {\n    throw new Error(data.errors.map(e => e.message).join(', '))\n  }\n  return data\n}\n","import './App.scss'\n\nimport React, { useState, useEffect } from 'react'\n\nimport TwitterLogin from '../twitter-login/TwitterLogin'\nimport Dashboard from '../dashboard/Dashboard'\nimport Footer from '../footer/Footer'\n\nimport { fetchUserData } from '../../services/apiService'\n\nfunction App () {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState('')\n  const [userData, setUserData] = useState(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setError('')\n      try {\n        const userData = await fetchUserData()\n        setUserData(userData)\n      } catch (e) {\n        setError(e.message)\n      }\n      setLoading(false)\n    }\n    fetchData()\n  }, [])\n\n  const main = () => {\n    if (loading) {\n      return <p>Loading...</p>\n    }\n    if (userData) {\n      return <Dashboard userData={userData} />\n    }\n    return (\n      <div>\n        {error ? <p className='error'>{error}</p> : ''}\n        <p>Find out what you should tweet to your followers.</p>\n        <TwitterLogin />\n      </div>\n    )\n  }\n\n  return (\n    <div className='app'>\n      <div className='app__column app__title'>\n        <h1>Know</h1>\n        <h1>Your</h1>\n        <h1>Followers</h1>\n      </div>\n      <div className='app__column'>\n        <main className='app__main'>\n          {main()}\n        </main>\n        <Footer />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport App from './components/app/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}